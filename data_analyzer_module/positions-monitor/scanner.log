2023-05-19 23:11:38,399 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:11:38,421 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:11:38,647 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:11:38,647 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:11:38,872 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:11:38,873 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:11:39,098 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:11:39,104 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:11:39,104 - sqlalchemy.engine.Engine - INFO - [generated in 0.00039s] {'opened_at_1': datetime.datetime(2023, 5, 19, 20, 41, 37, 350956, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 20, 41, 37, 350956, tzinfo=<UTC>)}
2023-05-19 23:11:39,332 - root - ERROR - An unexpected error occurred while scanning the database: 'NoneType' object is not iterable
2023-05-19 23:11:39,332 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:14:52,963 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:14:52,986 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:14:53,212 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:14:53,212 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:14:53,436 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:14:53,437 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:14:53,662 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:14:53,668 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:14:53,668 - sqlalchemy.engine.Engine - INFO - [generated in 0.00067s] {'opened_at_1': datetime.datetime(2023, 5, 19, 20, 44, 51, 939617, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 20, 44, 51, 939617, tzinfo=<UTC>)}
2023-05-19 23:14:54,020 - root - ERROR - An unexpected error occurred while scanning the database: 'NoneType' object is not iterable
2023-05-19 23:14:54,020 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:16:14,424 - __main__ - INFO - fetch_recent_positions called
2023-05-19 23:16:15,471 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:16:15,471 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:16:15,695 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:16:15,695 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:16:15,920 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:16:15,920 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:16:16,146 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:16:16,149 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:16:16,149 - sqlalchemy.engine.Engine - INFO - [generated in 0.00035s] {'opened_at_1': datetime.datetime(2023, 5, 19, 20, 46, 14, 425165, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 20, 46, 14, 425165, tzinfo=<UTC>)}
2023-05-19 23:16:16,490 - __main__ - INFO - positions: [<__main__.FetchedPosition object at 0x7efe884cf280>, <__main__.FetchedPosition object at 0x7efe884cfe20>, <__main__.FetchedPosition object at 0x7efe884cfe50>, <__main__.FetchedPosition object at 0x7efe884cfe80>, <__main__.FetchedPosition object at 0x7efe884cfeb0>, <__main__.FetchedPosition object at 0x7efe884cfee0>, <__main__.FetchedPosition object at 0x7efe884cff10>, <__main__.FetchedPosition object at 0x7efe884cff40>, <__main__.FetchedPosition object at 0x7efe884cff70>, <__main__.FetchedPosition object at 0x7efe884cffa0>, <__main__.FetchedPosition object at 0x7efe884cfdf0>, <__main__.FetchedPosition object at 0x7efe884ea040>, <__main__.FetchedPosition object at 0x7efe884ea0a0>, <__main__.FetchedPosition object at 0x7efe884ea100>, <__main__.FetchedPosition object at 0x7efe884ea160>, <__main__.FetchedPosition object at 0x7efe884ea1c0>, <__main__.FetchedPosition object at 0x7efe884ea220>, <__main__.FetchedPosition object at 0x7efe884ea280>, <__main__.FetchedPosition object at 0x7efe884ea2e0>, <__main__.FetchedPosition object at 0x7efe884ea340>, <__main__.FetchedPosition object at 0x7efe884ea3a0>, <__main__.FetchedPosition object at 0x7efe884ea400>, <__main__.FetchedPosition object at 0x7efe884ea460>, <__main__.FetchedPosition object at 0x7efe884ea4c0>, <__main__.FetchedPosition object at 0x7efe884ea520>, <__main__.FetchedPosition object at 0x7efe884ea580>, <__main__.FetchedPosition object at 0x7efe884ea5e0>, <__main__.FetchedPosition object at 0x7efe884ea640>, <__main__.FetchedPosition object at 0x7efe884ea6a0>, <__main__.FetchedPosition object at 0x7efe884ea700>, <__main__.FetchedPosition object at 0x7efe884ea760>, <__main__.FetchedPosition object at 0x7efe884ea7c0>, <__main__.FetchedPosition object at 0x7efe884ea820>, <__main__.FetchedPosition object at 0x7efe884ea880>, <__main__.FetchedPosition object at 0x7efe884ea8e0>, <__main__.FetchedPosition object at 0x7efe884ea940>, <__main__.FetchedPosition object at 0x7efe884ea9a0>, <__main__.FetchedPosition object at 0x7efe884eaa00>, <__main__.FetchedPosition object at 0x7efe884eaa60>, <__main__.FetchedPosition object at 0x7efe884eaac0>, <__main__.FetchedPosition object at 0x7efe884eab20>, <__main__.FetchedPosition object at 0x7efe884eab80>, <__main__.FetchedPosition object at 0x7efe884eabe0>, <__main__.FetchedPosition object at 0x7efe884eac40>, <__main__.FetchedPosition object at 0x7efe884eaca0>, <__main__.FetchedPosition object at 0x7efe884ead00>, <__main__.FetchedPosition object at 0x7efe884ead60>, <__main__.FetchedPosition object at 0x7efe884eadc0>, <__main__.FetchedPosition object at 0x7efe884eae20>, <__main__.FetchedPosition object at 0x7efe884eae80>, <__main__.FetchedPosition object at 0x7efe884eaee0>, <__main__.FetchedPosition object at 0x7efe884eaf40>, <__main__.FetchedPosition object at 0x7efe884eafa0>, <__main__.FetchedPosition object at 0x7efe884f3040>, <__main__.FetchedPosition object at 0x7efe884f30a0>, <__main__.FetchedPosition object at 0x7efe884f3100>, <__main__.FetchedPosition object at 0x7efe884f3160>, <__main__.FetchedPosition object at 0x7efe884f31c0>, <__main__.FetchedPosition object at 0x7efe884f3220>]
2023-05-19 23:16:16,499 - root - ERROR - An unexpected error occurred while scanning the database: 'NoneType' object is not iterable
2023-05-19 23:16:16,499 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:17:44,118 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:17:44,118 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:17:44,344 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:17:44,344 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:17:44,570 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:17:44,570 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:17:44,796 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:17:44,802 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:17:44,802 - sqlalchemy.engine.Engine - INFO - [generated in 0.00026s] {'opened_at_1': datetime.datetime(2023, 5, 19, 20, 47, 43, 74643, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 20, 47, 43, 74643, tzinfo=<UTC>)}
2023-05-19 23:17:45,154 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:19:45,365 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:19:45,366 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:19:45,366 - sqlalchemy.engine.Engine - INFO - [cached since 120.6s ago] {'opened_at_1': datetime.datetime(2023, 5, 19, 20, 49, 45, 364773, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 20, 49, 45, 364773, tzinfo=<UTC>)}
2023-05-19 23:19:45,723 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:21:45,933 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:21:45,934 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:21:45,934 - sqlalchemy.engine.Engine - INFO - [cached since 241.1s ago] {'opened_at_1': datetime.datetime(2023, 5, 19, 20, 51, 45, 932751, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 20, 51, 45, 932751, tzinfo=<UTC>)}
2023-05-19 23:21:46,287 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:26:34,468 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:26:34,468 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:26:34,694 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:26:34,694 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:26:34,919 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:26:34,919 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:26:35,144 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:26:35,149 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:26:35,149 - sqlalchemy.engine.Engine - INFO - [generated in 0.00037s] {'opened_at_1': datetime.datetime(2023, 5, 19, 20, 56, 33, 395100, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 20, 56, 33, 395100, tzinfo=<UTC>)}
2023-05-19 23:26:35,493 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:28:35,705 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:28:35,706 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:28:35,706 - sqlalchemy.engine.Engine - INFO - [cached since 120.6s ago] {'opened_at_1': datetime.datetime(2023, 5, 19, 20, 58, 35, 704760, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 20, 58, 35, 704760, tzinfo=<UTC>)}
2023-05-19 23:28:36,046 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:30:03,913 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:30:03,914 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:30:04,139 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:30:04,140 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:30:04,364 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:30:04,365 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:30:04,590 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:30:04,597 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:30:04,597 - sqlalchemy.engine.Engine - INFO - [generated in 0.00045s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 0, 2, 847105, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 0, 2, 847105, tzinfo=<UTC>)}
2023-05-19 23:30:04,940 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:30:29,778 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:30:29,778 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:30:30,004 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:30:30,004 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:30:30,229 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:30:30,229 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:30:30,454 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:30:30,459 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:30:30,460 - sqlalchemy.engine.Engine - INFO - [generated in 0.00058s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 0, 28, 723997, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 0, 28, 723997, tzinfo=<UTC>)}
2023-05-19 23:30:30,802 - __main__ - ERROR - An unexpected error occurred while scanning the database: 'FetchedPosition' object has no attribute 'position_cost'
2023-05-19 23:30:30,802 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:31:07,711 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:31:07,712 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:31:07,937 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:31:07,937 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:31:08,162 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:31:08,162 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:31:08,388 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:31:08,393 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:31:08,393 - sqlalchemy.engine.Engine - INFO - [generated in 0.00021s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 1, 6, 660068, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 1, 6, 660068, tzinfo=<UTC>)}
2023-05-19 23:31:08,735 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:31:40,150 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:31:40,150 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:31:40,375 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:31:40,376 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:31:40,600 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:31:40,601 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:31:40,826 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:31:40,832 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:31:40,833 - sqlalchemy.engine.Engine - INFO - [generated in 0.00094s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 1, 39, 101234, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 1, 39, 101234, tzinfo=<UTC>)}
2023-05-19 23:31:41,178 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:32:47,176 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:32:47,176 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:32:47,402 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:32:47,403 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:32:47,627 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:32:47,627 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:32:47,852 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:32:47,858 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:32:47,859 - sqlalchemy.engine.Engine - INFO - [generated in 0.00048s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 2, 46, 123935, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 2, 46, 123935, tzinfo=<UTC>)}
2023-05-19 23:32:48,202 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:33:14,637 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:33:14,637 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:33:14,862 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:33:14,862 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:33:15,088 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:33:15,089 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:33:15,320 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:33:15,326 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:33:15,327 - sqlalchemy.engine.Engine - INFO - [generated in 0.00048s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 3, 13, 586851, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 3, 13, 586851, tzinfo=<UTC>)}
2023-05-19 23:33:15,669 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:34:54,950 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:34:54,950 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:34:55,176 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:34:55,177 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:34:55,402 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:34:55,402 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:34:55,627 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:34:55,633 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:34:55,633 - sqlalchemy.engine.Engine - INFO - [generated in 0.00024s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 4, 53, 899473, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 4, 53, 899473, tzinfo=<UTC>)}
2023-05-19 23:34:55,975 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:35:22,212 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:35:22,213 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:35:22,438 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:35:22,438 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:35:22,663 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:35:22,663 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:35:22,889 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:35:22,896 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:35:22,897 - sqlalchemy.engine.Engine - INFO - [generated in 0.00119s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 5, 21, 163775, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 5, 21, 163775, tzinfo=<UTC>)}
2023-05-19 23:35:23,239 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:37:23,452 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:37:23,453 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:37:23,453 - sqlalchemy.engine.Engine - INFO - [cached since 120.6s ago] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 7, 23, 450710, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 7, 23, 450710, tzinfo=<UTC>)}
2023-05-19 23:37:23,795 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:39:09,946 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:39:09,946 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:39:10,172 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:39:10,173 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:39:10,398 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:39:10,398 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:39:10,623 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:39:10,629 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:39:10,630 - sqlalchemy.engine.Engine - INFO - [generated in 0.00029s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 9, 8, 898276, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 9, 8, 898276, tzinfo=<UTC>)}
2023-05-19 23:39:10,971 - __main__ - ERROR - An unexpected error occurred while scanning the database: 'PositionsScanner' object has no attribute 'find_big_positions'
2023-05-19 23:39:10,972 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:40:03,220 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:40:03,221 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:40:03,452 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:40:03,452 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:40:03,677 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:40:03,677 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:40:03,902 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:40:03,907 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:40:03,907 - sqlalchemy.engine.Engine - INFO - [generated in 0.00061s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 10, 2, 165386, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 10, 2, 165386, tzinfo=<UTC>)}
2023-05-19 23:40:04,249 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:40:20,043 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:40:20,043 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:40:20,269 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:40:20,269 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:40:20,494 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:40:20,494 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:40:20,720 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:40:20,727 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:40:20,727 - sqlalchemy.engine.Engine - INFO - [generated in 0.00066s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 10, 18, 991786, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 10, 18, 991786, tzinfo=<UTC>)}
2023-05-19 23:40:21,070 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:41:08,135 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:41:08,136 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:41:08,362 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:41:08,362 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:41:08,587 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:41:08,587 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:41:08,812 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:41:08,819 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:41:08,819 - sqlalchemy.engine.Engine - INFO - [generated in 0.00047s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 11, 7, 75616, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 11, 7, 75616, tzinfo=<UTC>)}
2023-05-19 23:41:09,162 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:42:01,841 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:42:01,841 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:42:02,068 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:42:02,069 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:42:02,293 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:42:02,294 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:42:02,519 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:42:02,524 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:42:02,524 - sqlalchemy.engine.Engine - INFO - [generated in 0.00045s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 12, 0, 789994, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 12, 0, 789994, tzinfo=<UTC>)}
2023-05-19 23:42:02,867 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:42:25,424 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:42:25,425 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:42:25,650 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:42:25,650 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:42:25,875 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:42:25,875 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:42:26,099 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:42:26,104 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:42:26,105 - sqlalchemy.engine.Engine - INFO - [generated in 0.00041s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 12, 24, 377842, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 12, 24, 377842, tzinfo=<UTC>)}
2023-05-19 23:42:26,447 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:44:26,661 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:44:26,662 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:44:26,662 - sqlalchemy.engine.Engine - INFO - [cached since 120.6s ago] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 14, 26, 660788, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 14, 26, 660788, tzinfo=<UTC>)}
2023-05-19 23:44:27,003 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:46:27,216 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:46:27,217 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:46:27,218 - sqlalchemy.engine.Engine - INFO - [cached since 241.1s ago] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 16, 27, 215691, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 16, 27, 215691, tzinfo=<UTC>)}
2023-05-19 23:46:27,560 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:48:27,773 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:48:27,774 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:48:27,774 - sqlalchemy.engine.Engine - INFO - [cached since 361.7s ago] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 18, 27, 772765, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 18, 27, 772765, tzinfo=<UTC>)}
2023-05-19 23:48:28,000 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:49:42,646 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:49:42,646 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:49:42,872 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:49:42,872 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:49:43,097 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:49:43,098 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:49:43,323 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:49:43,329 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:49:43,329 - sqlalchemy.engine.Engine - INFO - [generated in 0.00049s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 19, 41, 600119, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 19, 41, 600119, tzinfo=<UTC>)}
2023-05-19 23:49:43,557 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:50:39,978 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:50:39,978 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:50:40,204 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:50:40,204 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:50:40,429 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:50:40,429 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:50:40,655 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:50:40,662 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:50:40,662 - sqlalchemy.engine.Engine - INFO - [generated in 0.00053s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 20, 38, 930559, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 20, 38, 930559, tzinfo=<UTC>)}
2023-05-19 23:50:41,005 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:51:05,388 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:51:05,388 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:51:05,613 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:51:05,614 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:51:05,838 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:51:05,839 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:51:06,064 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:51:06,070 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:51:06,070 - sqlalchemy.engine.Engine - INFO - [generated in 0.00039s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 21, 4, 335846, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 21, 4, 335846, tzinfo=<UTC>)}
2023-05-19 23:51:06,412 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:53:06,626 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:53:06,627 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:53:06,627 - sqlalchemy.engine.Engine - INFO - [cached since 120.6s ago] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 23, 6, 625398, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 23, 6, 625398, tzinfo=<UTC>)}
2023-05-19 23:53:06,968 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:55:04,184 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:55:04,185 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:55:04,410 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:55:04,411 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:55:04,635 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:55:04,636 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:55:04,861 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:55:04,866 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:55:04,867 - sqlalchemy.engine.Engine - INFO - [generated in 0.00039s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 25, 3, 131314, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 25, 3, 131314, tzinfo=<UTC>)}
2023-05-19 23:55:05,207 - __main__ - ERROR - An unexpected error occurred while scanning the database: find_similar_positions() missing 1 required positional argument: 'positions'
2023-05-19 23:55:05,208 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:55:57,078 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:55:57,079 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:55:57,304 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:55:57,305 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:55:57,529 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:55:57,529 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:55:57,755 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:55:57,761 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:55:57,761 - sqlalchemy.engine.Engine - INFO - [generated in 0.00074s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 25, 56, 27951, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 25, 56, 27951, tzinfo=<UTC>)}
2023-05-19 23:55:58,102 - __main__ - ERROR - An unexpected error occurred while scanning the database: find_similar_positions() missing 1 required positional argument: 'positions'
2023-05-19 23:55:58,103 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:57:11,653 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:57:11,653 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:57:11,880 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:57:11,880 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:57:12,104 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:57:12,105 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:57:12,330 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:57:12,336 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:57:12,336 - sqlalchemy.engine.Engine - INFO - [generated in 0.00046s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 27, 10, 598858, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 27, 10, 598858, tzinfo=<UTC>)}
2023-05-19 23:57:12,685 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:58:20,890 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:58:20,890 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:58:21,115 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:58:21,115 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:58:21,340 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:58:21,340 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:58:21,565 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:58:21,571 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:58:21,571 - sqlalchemy.engine.Engine - INFO - [generated in 0.00042s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 28, 19, 837008, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 28, 19, 837008, tzinfo=<UTC>)}
2023-05-19 23:58:21,919 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-19 23:59:46,870 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-19 23:59:46,870 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:59:47,095 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-19 23:59:47,096 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:59:47,321 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-19 23:59:47,321 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-19 23:59:47,546 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-19 23:59:47,553 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-19 23:59:47,553 - sqlalchemy.engine.Engine - INFO - [generated in 0.00068s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 29, 45, 819742, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 29, 45, 819742, tzinfo=<UTC>)}
2023-05-19 23:59:47,902 - __main__ - ERROR - An unexpected error occurred while scanning the database: 'NoneType' object is not iterable
2023-05-19 23:59:47,902 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-20 00:01:05,120 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-20 00:01:05,121 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:01:05,346 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-20 00:01:05,347 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:01:05,572 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-20 00:01:05,572 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:01:05,798 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-20 00:01:05,804 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-20 00:01:05,804 - sqlalchemy.engine.Engine - INFO - [generated in 0.00042s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 31, 4, 71960, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 31, 4, 71960, tzinfo=<UTC>)}
2023-05-20 00:01:06,153 - __main__ - ERROR - An unexpected error occurred while scanning the database: 'NoneType' object is not iterable
2023-05-20 00:01:06,154 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-20 00:01:13,191 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-20 00:01:13,191 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:01:13,416 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-20 00:01:13,417 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:01:13,642 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-20 00:01:13,642 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:01:13,868 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-20 00:01:13,873 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-20 00:01:13,873 - sqlalchemy.engine.Engine - INFO - [generated in 0.00024s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 31, 12, 116125, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 31, 12, 116125, tzinfo=<UTC>)}
2023-05-20 00:01:14,224 - __main__ - ERROR - An unexpected error occurred while scanning the database: 'NoneType' object is not iterable
2023-05-20 00:01:14,224 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-20 00:02:28,720 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-20 00:02:28,720 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:02:28,945 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-20 00:02:28,945 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:02:29,170 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-20 00:02:29,170 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:02:29,396 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-20 00:02:29,399 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-20 00:02:29,399 - sqlalchemy.engine.Engine - INFO - [generated in 0.00028s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 32, 27, 671403, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 32, 27, 671403, tzinfo=<UTC>)}
2023-05-20 00:02:29,750 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-20 00:04:29,961 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-20 00:04:29,962 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-20 00:04:29,962 - sqlalchemy.engine.Engine - INFO - [cached since 120.6s ago] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 34, 29, 960822, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 34, 29, 960822, tzinfo=<UTC>)}
2023-05-20 00:04:30,318 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-20 00:05:18,008 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-20 00:05:18,009 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:05:18,234 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-20 00:05:18,234 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:05:18,458 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-20 00:05:18,459 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:05:18,684 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-20 00:05:18,689 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-20 00:05:18,689 - sqlalchemy.engine.Engine - INFO - [generated in 0.00047s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 35, 16, 957668, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 35, 16, 957668, tzinfo=<UTC>)}
2023-05-20 00:05:19,037 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-20 00:06:29,905 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-20 00:06:29,905 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:06:30,136 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-20 00:06:30,136 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:06:30,361 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-20 00:06:30,361 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:06:30,587 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-20 00:06:30,592 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-20 00:06:30,592 - sqlalchemy.engine.Engine - INFO - [generated in 0.00089s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 36, 28, 852075, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 36, 28, 852075, tzinfo=<UTC>)}
2023-05-20 00:06:30,947 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-20 00:07:27,830 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-20 00:07:27,830 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:07:28,056 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-20 00:07:28,056 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:07:28,281 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-20 00:07:28,281 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:07:28,506 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-20 00:07:28,513 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-20 00:07:28,513 - sqlalchemy.engine.Engine - INFO - [generated in 0.00047s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 37, 26, 781106, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 37, 26, 781106, tzinfo=<UTC>)}
2023-05-20 00:07:28,863 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-20 00:07:51,621 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-20 00:07:51,621 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:07:51,852 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-20 00:07:51,852 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:07:52,076 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-20 00:07:52,076 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:07:52,301 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-20 00:07:52,306 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-20 00:07:52,306 - sqlalchemy.engine.Engine - INFO - [generated in 0.00037s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 37, 50, 568108, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 37, 50, 568108, tzinfo=<UTC>)}
2023-05-20 00:07:52,655 - __main__ - ERROR - An unexpected error occurred while scanning the database: 'FetchedPosition' object has no attribute 'pnl_percentage'
2023-05-20 00:07:52,655 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-20 00:08:13,407 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-20 00:08:13,408 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:08:13,633 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-20 00:08:13,634 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:08:13,858 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-20 00:08:13,858 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:08:14,083 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-20 00:08:14,090 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-20 00:08:14,090 - sqlalchemy.engine.Engine - INFO - [generated in 0.00061s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 38, 12, 355738, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 38, 12, 355738, tzinfo=<UTC>)}
2023-05-20 00:08:14,442 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2023-05-20 00:08:28,297 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2023-05-20 00:08:28,297 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:08:28,523 - sqlalchemy.engine.Engine - INFO - select current_schema()
2023-05-20 00:08:28,523 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:08:28,749 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2023-05-20 00:08:28,749 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2023-05-20 00:08:28,975 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2023-05-20 00:08:28,982 - sqlalchemy.engine.Engine - INFO - SELECT fetched_positions.id AS fetched_positions_id, fetched_positions.position_id AS fetched_positions_position_id, fetched_positions.uid AS fetched_positions_uid, fetched_positions.symbol AS fetched_positions_symbol, fetched_positions.entry_price AS fetched_positions_entry_price, fetched_positions.mark_price AS fetched_positions_mark_price, fetched_positions.pnl AS fetched_positions_pnl, fetched_positions.roe AS fetched_positions_roe, fetched_positions.amount AS fetched_positions_amount, fetched_positions.update_timestamp AS fetched_positions_update_timestamp, fetched_positions.trade_before AS fetched_positions_trade_before, fetched_positions.long AS fetched_positions_long, fetched_positions.short AS fetched_positions_short, fetched_positions.leverage AS fetched_positions_leverage, fetched_positions.opened_at AS fetched_positions_opened_at, fetched_positions.closed_at AS fetched_positions_closed_at 
FROM fetched_positions 
WHERE fetched_positions.opened_at >= %(opened_at_1)s OR fetched_positions.closed_at >= %(closed_at_1)s
2023-05-20 00:08:28,983 - sqlalchemy.engine.Engine - INFO - [generated in 0.00069s] {'opened_at_1': datetime.datetime(2023, 5, 19, 21, 38, 27, 241772, tzinfo=<UTC>), 'closed_at_1': datetime.datetime(2023, 5, 19, 21, 38, 27, 241772, tzinfo=<UTC>)}
2023-05-20 00:08:29,334 - sqlalchemy.engine.Engine - INFO - ROLLBACK
